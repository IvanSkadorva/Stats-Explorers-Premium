# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#


upstream  info-server {
    server 172.17.0.1:3000;
    server 172.17.0.1:3001;
}

upstream stat-server {
    # server fp-orders:10011; // docker link
    # server hostip:10011; // host ip, port (fp-orders)
    # server traefik:80; // traefik url .. docker 
    # server conf.d (..) // docker   + nginx 

    server 172.17.0.1:10011;
}

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    default_type 'text/html';
   
    location / {
	   index index.html;
       ssi on;
	   root html;
    }

    location /backend/statistics {
        # internal;
        proxy_pass http://orders-server/api/v1/person/videos;
        proxy_redirect off;
    }

    location = /statistics  {
        # to update without nginx reload during development
        lua_code_cache off; 

        # cd /usr/local/openresty 
        # ./luajit/bin/luajit -b nginx/templates/lua/spots.lua  nginx/templates/lua/spots.lua.ljbc 
        # content_by_lua_file templates/lua/spots.lua.ljbc; 

        content_by_lua_block { 
            response = ngx.location.capture (
                                    '/backend/statistics', { 
                                        always_forward_body = true, 
                                        copy_all_vars = true})

            if response.status > 500 then 
                ngx.exit(response.status)
            end

            local cjson = require("cjson")
            statistics = cjson.decode(response.body)


            local template = require "resty.template";
            local template_string = ngx.location.capture("/templates/lua/statistics.html")

            template.render(template_string.body, {
                items = statistics
            })          
        }


        # content_by_lua_file templates/lua/spots2.lua.ljbc;    
	    
    }

    location /templates {
        root   /usr/local/openresty/nginx;
    }
 

    location ~ ^/news/?(.*) {
        proxy_pass http://info-server/$1;
        xslt_types application/xml;
        xslt_stylesheet templates/xslt/atom2xhtml.xslt;
    }

     location = /statistics {
        proxy_pass http://stat-server/api/v1/person/statistics;
        xslt_types application/xml;
        xslt_stylesheet templates/xslt/bets.xslt;
        add_header  Content-Type 'text/html';
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
